/* Generated By:JavaCC: Do not edit this line. ParserTokenManager.h Version 8.0.0 */
#pragma once

#include "stdio.h"
#include "JavaCC.h"
#include "CharStream.h"
#include "Token.h"
#include "ErrorHandler.h"
#include "TokenManager.h"
#include "ParserConstants.h"

namespace EG1 {
class Parser;

/** Token Manager. */
class ParserTokenManager : public TokenManager {
public:
#ifndef JAVACC_CHARSTREAM
#define JAVACC_CHARSTREAM CharStream
#endif

private:
  int defaultLexState;
  int curLexState = 0;
  int jjmatchedPos;
  int jjmatchedKind;

  int stateSet[21];
  int newStateSet[21];
  int moved[21];
  int moveIndex;
  unsigned long long jjChars[21][1024];
    
  JJString                  jjimage;
  JJString                  image = jjimage;
  int                       jjimageLen;
  int                       lengthOfMatch;
  JJChar                    curChar;
  JAVACC_CHARSTREAM       * input_stream;

  int                       jjrounds[21];
  int                       jjstateSet[2 * 21];
  TokenManagerErrorHandler* errorHandler;
  bool 						delete_eh;

public: 
  ParserTokenManager(JAVACC_CHARSTREAM * stream, int lexState = 0);
  virtual ~ParserTokenManager() {}

  Token * getNextToken();

protected:
  bool moveToNextChar();
  
  void ReInit(JAVACC_CHARSTREAM * stream, int lexState = 0);

  void SwitchTo(int lexState);


private:
  void TokenLexicalActions(Token * matchedToken);
  void SkipLexicalActions(Token * matchedToken);
  void MoreLexicalActions();

  int getStartAndSize(int index, int isCount);
  int jjRunStringLiteralMatch();

  int jjMoveNfa(int startState, int curPos);
  Token * jjFillToken();

public:
  void setErrorHandler(TokenManagerErrorHandler *eh) {
      if (delete_eh) delete errorHandler, errorHandler = nullptr;
      delete_eh = false;  // We don't delete stuff passed in.
      errorHandler = eh;
  }
};

}
/* JavaCC - OriginalChecksum=4b5cb41a6a2188b100d9b3b1c07ca150 (do not edit this line) */
