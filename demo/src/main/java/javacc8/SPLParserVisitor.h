/* Generated By:JavaCC: Do not edit this line. SPLParserVisitor.h Version 8.0.0 */
#pragma once


#include "JavaCC.h"
#include "SPLParserTree.h"
class SPLParserVisitor
{
public:
  virtual void visit(const Node *node, void* data) = 0;
  virtual void visit(const ASTCompilationUnit *node, void* data) = 0;
  virtual void visit(const ASTVarDeclaration *node, void* data) = 0;
  virtual void visit(const ASTAssignment *node, void* data) = 0;
  virtual void visit(const ASTOrNode *node, void* data) = 0;
  virtual void visit(const ASTAndNode *node, void* data) = 0;
  virtual void visit(const ASTBitwiseOrNode *node, void* data) = 0;
  virtual void visit(const ASTBitwiseXorNode *node, void* data) = 0;
  virtual void visit(const ASTBitwiseAndNode *node, void* data) = 0;
  virtual void visit(const ASTEQNode *node, void* data) = 0;
  virtual void visit(const ASTNENode *node, void* data) = 0;
  virtual void visit(const ASTLTNode *node, void* data) = 0;
  virtual void visit(const ASTGTNode *node, void* data) = 0;
  virtual void visit(const ASTLENode *node, void* data) = 0;
  virtual void visit(const ASTGENode *node, void* data) = 0;
  virtual void visit(const ASTAddNode *node, void* data) = 0;
  virtual void visit(const ASTSubtractNode *node, void* data) = 0;
  virtual void visit(const ASTMulNode *node, void* data) = 0;
  virtual void visit(const ASTDivNode *node, void* data) = 0;
  virtual void visit(const ASTModNode *node, void* data) = 0;
  virtual void visit(const ASTBitwiseComplNode *node, void* data) = 0;
  virtual void visit(const ASTNotNode *node, void* data) = 0;
  virtual void visit(const ASTId *node, void* data) = 0;
  virtual void visit(const ASTIntConstNode *node, void* data) = 0;
  virtual void visit(const ASTTrueNode *node, void* data) = 0;
  virtual void visit(const ASTFalseNode *node, void* data) = 0;
  virtual void visit(const ASTReadStatement *node, void* data) = 0;
  virtual void visit(const ASTWriteStatement *node, void* data) = 0;
  virtual ~SPLParserVisitor() { }
};
class SPLParserDefaultVisitor : public SPLParserVisitor {
public:
  virtual void defaultVisit(const Node *node, void* data) = 0;
  virtual void visit(const Node *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTCompilationUnit *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTVarDeclaration *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTAssignment *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTOrNode *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTAndNode *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTBitwiseOrNode *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTBitwiseXorNode *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTBitwiseAndNode *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTEQNode *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTNENode *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTLTNode *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTGTNode *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTLENode *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTGENode *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTAddNode *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTSubtractNode *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTMulNode *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTDivNode *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTModNode *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTBitwiseComplNode *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTNotNode *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTId *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTIntConstNode *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTTrueNode *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTFalseNode *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTReadStatement *node, void* data) {
    defaultVisit(node, data);
  }
  virtual void visit(const ASTWriteStatement *node, void* data) {
    defaultVisit(node, data);
  }
  ~SPLParserDefaultVisitor() { }
};
/* JavaCC - OriginalChecksum=2b8196d56dd3a1604020e331d120efad (do not edit this line) */
