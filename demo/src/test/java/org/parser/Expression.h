/* Generated By:JavaCC: Do not edit this line. Expression.h Version 8.0.0 */
#pragma once

#include "JavaCC.h"
#include "CharStream.h"
#include "Token.h"
#include "TokenManager.h"
#include "ExpressionConstants.h"
#include "JJTExpressionState.h"
#include "ErrorHandler.h"
#include "ExpressionTree.h"
  struct JJCalls {
    int        gen;
    int        arg;
    JJCalls*   next;
    Token*     first;
    ~JJCalls() { if (next) delete next; }
     JJCalls() { next = nullptr; arg = 0; gen = -1; first = nullptr; }
  };

class Expression {
public:
Node* compile();
void parseNull();
void parseBool();
void parseUuid();
void parseRegExp();
void parseString();
void parseInteger();
void parseDecimal();
void parseNumber();
void parseTemporal();
void parseGeometry();
void parseEWKT();
void parseCoordinate();
void parseCoordinateArray();
void parsePoint();
void parsePointCoordinate();
void parseLineString();
void parsePolygon();
void parseMultiPoint();
void parseMultiLineString();
void parseMultiPolygon();
void parseGeometryCollection();
void parseEnvelope();
void parseIdentifier();
void parseDE9IM();
void parseDistanceUnits();
void compileName();
void parseName();
void parseLocalName();
void compileExpression();
void parseExpressionList();
void parseExpression();
void parseMultiplicativeExpression();
void parseUnaryExpression();
void parseLiteral();
void parseNamedExpression();
void parseParameter();
void parseBinding();
void parseAttribute();
void parseFunction();
void compileFilter();
void parseFilter();
void parseAndFilter();
void parseNotFilter();
void parsePredicate();
void parseExistsPredicate();
void parseExistsOperator();
void parseRelationalPredicate();
void parseRelationalPredicatePart();
void parseComparisionPredicate();
void parseComparisionOperator();
void parseIsNullPredicate();
void parseIsNullOperator();
void parseLikePredicate();
void parseLikeOperator();
void parseLikePattern();
void parseBetweenPredicate();
void parseBetweenOperator();
void parseInPredicate();
void parseInOperator();
void parseInPredicateList();
void parseInPredicateItem();
void parseSpatialPredicate();
void parseBBoxArguments();
void parseRelateArguments();
void parseSpatialArguments();
void parseSpatialDistanceArguments();
void compileSorting();
void parseSortList();
void parseSortBy();
void parseSortAscending();
void parseSortDescending();
 inline bool jj_2_1(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    jj_done = false;
    return (!jj_3_1() || jj_done);
 { jj_save(0, xla); }
  }

 inline bool jj_2_2(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    jj_done = false;
    return (!jj_3_2() || jj_done);
 { jj_save(1, xla); }
  }

 inline bool jj_2_3(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    jj_done = false;
    return (!jj_3_3() || jj_done);
 { jj_save(2, xla); }
  }

 inline bool jj_2_4(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    jj_done = false;
    return (!jj_3_4() || jj_done);
 { jj_save(3, xla); }
  }

 inline bool jj_2_5(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    jj_done = false;
    return (!jj_3_5() || jj_done);
 { jj_save(4, xla); }
  }

 inline bool jj_2_6(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    jj_done = false;
    return (!jj_3_6() || jj_done);
 { jj_save(5, xla); }
  }

 inline bool jj_2_7(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    jj_done = false;
    return (!jj_3_7() || jj_done);
 { jj_save(6, xla); }
  }

 inline bool jj_3R_parseLineString_377_4_176()
 {
    if (jj_done) return true;
    if (jj_3R_parseCoordinateArray_359_3_187()) return true;
    return false;
  }

 inline bool jj_3R_parseComparisionPredicate_761_3_66()
 {
    if (jj_done) return true;
    if (jj_3R_parseComparisionOperator_772_3_85()) return true;
    if (jj_3R_parseExpression_506_3_25()) return true;
    return false;
  }

 inline bool jj_3R_parseLineString_377_3_156()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (jj_3R_parseLineString_377_4_176()) jj_scanpos = xsp;
    return false;
  }

 inline bool jj_3_5()
 {
    if (jj_done) return true;
    if (jj_3R_parseBetweenPredicate_853_3_19()) return true;
    return false;
  }

 inline bool jj_3_4()
 {
    if (jj_done) return true;
    if (jj_3R_parseLikePredicate_812_3_18()) return true;
    return false;
  }

 inline bool jj_3R_parsePointCoordinate_371_3_199()
 {
    if (jj_done) return true;
    if (jj_3R_parseCoordinate_353_3_186()) return true;
    return false;
  }

 inline bool jj_3R_parsePointCoordinate_371_3_189()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parsePointCoordinate_371_3_199()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parsePointCoordinate_371_30_200()) return true;
    return false;
  }

 inline bool jj_3R_parseCoordinate_353_19_197()
 {
    if (jj_done) return true;
    if (jj_3R_parseNumber_311_3_121()) return true;
    return false;
  }

 inline bool jj_3R_parseRelationalPredicatePart_750_3_46()
 {
    if (jj_done) return true;
    if (jj_3R_parseInPredicate_877_3_67()) return true;
    return false;
  }

 inline bool jj_3R_parsePoint_365_4_174()
 {
    if (jj_done) return true;
    if (jj_scan_token(LP)) return true;
    if (jj_3R_parseCoordinate_353_3_186()) return true;
    if (jj_scan_token(RP)) return true;
    return false;
  }

 inline bool jj_3R_parseRelationalPredicatePart_749_3_45()
 {
    if (jj_done) return true;
    if (jj_3R_parseBetweenPredicate_853_3_19()) return true;
    return false;
  }

 inline bool jj_3R_parsePoint_365_3_154()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (jj_3R_parsePoint_365_4_174()) jj_scanpos = xsp;
    return false;
  }

 inline bool jj_3R_parseRelationalPredicatePart_748_3_44()
 {
    if (jj_done) return true;
    if (jj_3R_parseLikePredicate_812_3_18()) return true;
    return false;
  }

 inline bool jj_3R_parseRelationalPredicatePart_747_3_43()
 {
    if (jj_done) return true;
    if (jj_3R_parseComparisionPredicate_761_3_66()) return true;
    return false;
  }

 inline bool jj_3R_parseRelationalPredicatePart_746_3_26()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parseRelationalPredicatePart_746_3_42()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseRelationalPredicatePart_747_3_43()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseRelationalPredicatePart_748_3_44()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseRelationalPredicatePart_749_3_45()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parseRelationalPredicatePart_750_3_46()) return true;
    return false;
  }

 inline bool jj_3R_parseRelationalPredicatePart_746_3_42()
 {
    if (jj_done) return true;
    if (jj_3R_parseIsNullPredicate_788_3_65()) return true;
    return false;
  }

 inline bool jj_3R_parseCoordinateArray_359_3_187()
 {
    if (jj_done) return true;
    if (jj_scan_token(LP)) return true;
    if (jj_3R_parseCoordinate_353_3_186()) return true;
    Token * xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_parseCoordinateArray_359_30_198()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(RP)) return true;
    return false;
  }

 inline bool jj_3R_parseNumber_315_47_153()
 {
    if (jj_done) return true;
    if (jj_3R_parseDecimal_304_3_149()) return true;
    return false;
  }

 inline bool jj_3R_parseCoordinate_353_3_186()
 {
    if (jj_done) return true;
    if (jj_3R_parseNumber_311_3_121()) return true;
    Token * xsp;
    if (jj_3R_parseCoordinate_353_19_197()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_parseCoordinate_353_19_197()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

 inline bool jj_3R_parseRelationalPredicate_731_3_17()
 {
    if (jj_done) return true;
    if (jj_3R_parseExpression_506_3_25()) return true;
    if (jj_3R_parseRelationalPredicatePart_746_3_26()) return true;
    return false;
  }

 inline bool jj_3R_parseEWKT_346_3_124()
 {
    if (jj_done) return true;
    if (jj_scan_token(SRID_TOKEN)) return true;
    if (jj_3R_parseNumber_311_3_121()) return true;
    if (jj_scan_token(SEMICOLON)) return true;
    if (jj_3R_parseGeometry_332_3_123()) return true;
    return false;
  }

 inline bool jj_3R_parseNumber_313_29_151()
 {
    if (jj_done) return true;
    if (jj_3R_parseDecimal_304_3_149()) return true;
    return false;
  }

 inline bool jj_3R_parseGeometry_339_3_146()
 {
    if (jj_done) return true;
    if (jj_scan_token(ENVELOPE_TOKEN)) return true;
    if (jj_3R_parseEnvelope_413_3_161()) return true;
    return false;
  }

 inline bool jj_3R_parseGeometry_338_3_145()
 {
    if (jj_done) return true;
    if (jj_scan_token(GEOMETRYCOLLECTION_TOKEN)) return true;
    if (jj_3R_parseGeometryCollection_407_3_160()) return true;
    return false;
  }

 inline bool jj_3R_parseGeometry_337_3_144()
 {
    if (jj_done) return true;
    if (jj_scan_token(MULTILINESTRING_TOKEN)) return true;
    if (jj_3R_parseMultiLineString_395_3_159()) return true;
    return false;
  }

 inline bool jj_3R_parseExistsOperator_720_3_39()
 {
    if (jj_done) return true;
    if (jj_scan_token(NOT)) return true;
    if (jj_scan_token(EXISTS)) return true;
    return false;
  }

 inline bool jj_3R_parseGeometry_336_3_143()
 {
    if (jj_done) return true;
    if (jj_scan_token(MULTIPOLYGON_TOKEN)) return true;
    if (jj_3R_parseMultiPolygon_401_3_158()) return true;
    return false;
  }

 inline bool jj_3R_parseExistsOperator_719_3_24()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parseExistsOperator_719_3_38()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parseExistsOperator_720_3_39()) return true;
    return false;
  }

 inline bool jj_3R_parseExistsOperator_719_3_38()
 {
    if (jj_done) return true;
    if (jj_scan_token(EXISTS)) return true;
    return false;
  }

 inline bool jj_3R_parseGeometry_335_3_142()
 {
    if (jj_done) return true;
    if (jj_scan_token(MULTIPOINT_TOKEN)) return true;
    if (jj_3R_parseMultiPoint_389_3_157()) return true;
    return false;
  }

 inline bool jj_3R_parseGeometry_334_3_141()
 {
    if (jj_done) return true;
    if (jj_scan_token(LINESTRING_TOKEN)) return true;
    if (jj_3R_parseLineString_377_3_156()) return true;
    return false;
  }

 inline bool jj_3R_parseGeometry_333_3_140()
 {
    if (jj_done) return true;
    if (jj_scan_token(POLYGON_TOKEN)) return true;
    if (jj_3R_parsePolygon_383_3_155()) return true;
    return false;
  }

 inline bool jj_3R_parseGeometry_332_3_123()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parseGeometry_332_3_139()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseGeometry_333_3_140()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseGeometry_334_3_141()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseGeometry_335_3_142()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseGeometry_336_3_143()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseGeometry_337_3_144()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseGeometry_338_3_145()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parseGeometry_339_3_146()) return true;
    return false;
  }

 inline bool jj_3R_parseGeometry_332_3_139()
 {
    if (jj_done) return true;
    if (jj_scan_token(POINT_TOKEN)) return true;
    if (jj_3R_parsePoint_365_3_154()) return true;
    return false;
  }

 inline bool jj_3R_parseTemporal_326_3_138()
 {
    if (jj_done) return true;
    if (jj_scan_token(OFFSETDATETIME_TOKEN)) return true;
    return false;
  }

 inline bool jj_3R_parseTemporal_325_3_137()
 {
    if (jj_done) return true;
    if (jj_scan_token(OFFSETTIME_TOKEN)) return true;
    return false;
  }

 inline bool jj_3R_parseBBoxArguments_968_125_194()
 {
    if (jj_done) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_parseString_288_3_68()) return true;
    return false;
  }

 inline bool jj_3R_parseNumber_315_12_152()
 {
    if (jj_done) return true;
    if (jj_3R_parseInteger_295_3_90()) return true;
    return false;
  }

 inline bool jj_3R_parseTemporal_324_3_136()
 {
    if (jj_done) return true;
    if (jj_scan_token(LOCALDATETIME_TOKEN)) return true;
    return false;
  }

 inline bool jj_3R_parseExistsPredicate_707_3_16()
 {
    if (jj_done) return true;
    if (jj_3R_parseNamedExpression_577_3_23()) return true;
    if (jj_3R_parseExistsOperator_719_3_24()) return true;
    return false;
  }

 inline bool jj_3R_parseTemporal_323_3_135()
 {
    if (jj_done) return true;
    if (jj_scan_token(LOCALDATE_TOKEN)) return true;
    return false;
  }

 inline bool jj_3R_parseNumber_313_12_150()
 {
    if (jj_done) return true;
    if (jj_3R_parseInteger_295_3_90()) return true;
    return false;
  }

 inline bool jj_3R_parseTemporal_321_3_122()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parseTemporal_321_3_134()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseTemporal_323_3_135()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseTemporal_324_3_136()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseTemporal_325_3_137()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parseTemporal_326_3_138()) return true;
    return false;
  }

 inline bool jj_3R_parseTemporal_321_3_134()
 {
    if (jj_done) return true;
    if (jj_scan_token(LOCALTIME_TOKEN)) return true;
    return false;
  }

 inline bool jj_3_3()
 {
    if (jj_done) return true;
    if (jj_3R_parseRelationalPredicate_731_3_17()) return true;
    return false;
  }

 inline bool jj_3_2()
 {
    if (jj_done) return true;
    if (jj_3R_parseExistsPredicate_707_3_16()) return true;
    return false;
  }

 inline bool jj_3R_parseNumber_314_3_133()
 {
    if (jj_done) return true;
    if (jj_scan_token(SUB)) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parseNumber_315_12_152()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parseNumber_315_47_153()) return true;
    return false;
  }

 inline bool jj_3R_parseNumber_313_3_132()
 {
    if (jj_done) return true;
    if (jj_scan_token(ADD)) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parseNumber_313_12_150()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parseNumber_313_29_151()) return true;
    return false;
  }

 inline bool jj_3R_parseNumber_312_3_131()
 {
    if (jj_done) return true;
    if (jj_3R_parseDecimal_304_3_149()) return true;
    return false;
  }

 inline bool jj_3R_parsePredicate_695_3_129()
 {
    if (jj_done) return true;
    if (jj_3R_parseExpression_506_3_25()) return true;
    return false;
  }

 inline bool jj_3R_parseNumber_311_3_121()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parseNumber_311_3_130()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseNumber_312_3_131()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseNumber_313_3_132()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parseNumber_314_3_133()) return true;
    return false;
  }

 inline bool jj_3R_parseNumber_311_3_130()
 {
    if (jj_done) return true;
    if (jj_3R_parseInteger_295_3_90()) return true;
    return false;
  }

 inline bool jj_3R_parsePredicate_694_3_128()
 {
    if (jj_done) return true;
    if (jj_3R_parseRelationalPredicate_731_3_17()) return true;
    return false;
  }

 inline bool jj_3R_parsePredicate_693_3_126()
 {
    if (jj_done) return true;
    if (jj_3R_parseSpatialPredicate_944_3_148()) return true;
    return false;
  }

 inline bool jj_3R_parsePredicate_693_3_127()
 {
    if (jj_done) return true;
    if (jj_3R_parseExistsPredicate_707_3_16()) return true;
    return false;
  }

 inline bool jj_3R_parsePredicate_691_3_119()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parsePredicate_691_3_125()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parsePredicate_693_3_126()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parsePredicate_693_3_127()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parsePredicate_694_3_128()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parsePredicate_695_3_129()) return true;
    return false;
  }

 inline bool jj_3R_parsePredicate_691_3_125()
 {
    if (jj_done) return true;
    if (jj_3R_parseBool_267_3_147()) return true;
    return false;
  }

 inline bool jj_3R_parseDecimal_304_3_149()
 {
    if (jj_done) return true;
    if (jj_scan_token(DECIMAL_TOKEN)) return true;
    return false;
  }

 inline bool jj_3R_parseInteger_298_3_109()
 {
    if (jj_done) return true;
    if (jj_scan_token(HEXADECIMAL_TOKEN)) return true;
    return false;
  }

 inline bool jj_3R_parseAndFilter_663_21_89()
 {
    if (jj_done) return true;
    if (jj_scan_token(AND)) return true;
    if (jj_3R_parseNotFilter_675_3_88()) return true;
    return false;
  }

 inline bool jj_3R_parseInteger_297_3_108()
 {
    if (jj_done) return true;
    if (jj_scan_token(INTEGER_TOKEN)) return true;
    return false;
  }

 inline bool jj_3R_parseInteger_295_3_90()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parseInteger_295_3_107()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseInteger_297_3_108()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parseInteger_298_3_109()) return true;
    return false;
  }

 inline bool jj_3R_parseInteger_295_3_107()
 {
    if (jj_done) return true;
    if (jj_scan_token(OCTAL_TOKEN)) return true;
    return false;
  }

 inline bool jj_3R_parseSortDescending_1060_3_20()
 {
    if (jj_done) return true;
    if (jj_3R_parseAttribute_617_3_30()) return true;
    if (jj_scan_token(DESC)) return true;
    return false;
  }

 inline bool jj_3R_parseNotFilter_676_3_106()
 {
    if (jj_done) return true;
    if (jj_3R_parsePredicate_691_3_119()) return true;
    return false;
  }

 inline bool jj_3R_parseNotFilter_675_3_88()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parseNotFilter_675_3_105()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parseNotFilter_676_3_106()) return true;
    return false;
  }

 inline bool jj_3R_parseNotFilter_675_3_105()
 {
    if (jj_done) return true;
    if (jj_scan_token(NOT)) return true;
    if (jj_3R_parsePredicate_691_3_119()) return true;
    return false;
  }

 inline bool jj_3R_parseString_288_3_68()
 {
    if (jj_done) return true;
    if (jj_scan_token(STRING_TOKEN)) return true;
    return false;
  }

 inline bool jj_3R_parseFilter_652_21_74()
 {
    if (jj_done) return true;
    if (jj_scan_token(OR)) return true;
    if (jj_3R_parseAndFilter_663_3_73()) return true;
    return false;
  }

 inline bool jj_3R_parseRegExp_281_3_69()
 {
    if (jj_done) return true;
    if (jj_scan_token(REGEXP_TOKEN)) return true;
    return false;
  }

 inline bool jj_3_7()
 {
    if (jj_done) return true;
    if (jj_3R_parseSortDescending_1060_3_20()) return true;
    return false;
  }

 inline bool jj_3R_parseAndFilter_663_3_73()
 {
    if (jj_done) return true;
    if (jj_3R_parseNotFilter_675_3_88()) return true;
    Token * xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_parseAndFilter_663_21_89()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

 inline bool jj_3R_parseUuid_274_3_120()
 {
    if (jj_done) return true;
    if (jj_scan_token(UUID_TOKEN)) return true;
    return false;
  }

 inline bool jj_3R_parseFilter_652_3_57()
 {
    if (jj_done) return true;
    if (jj_3R_parseAndFilter_663_3_73()) return true;
    Token * xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_parseFilter_652_21_74()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

 inline bool jj_3R_parseBool_267_3_147()
 {
    if (jj_done) return true;
    if (jj_scan_token(BOOL_TOKEN)) return true;
    return false;
  }

 inline bool jj_3R_parseFunction_628_24_22()
 {
    if (jj_done) return true;
    if (jj_3R_parseExpressionList_494_3_33()) return true;
    return false;
  }

 inline bool jj_3R_parseNull_260_3_91()
 {
    if (jj_done) return true;
    if (jj_scan_token(NULL_TOKEN)) return true;
    return false;
  }

 inline bool jj_3R_parseFunction_628_3_15()
 {
    if (jj_done) return true;
    if (jj_3R_parseName_457_3_21()) return true;
    if (jj_scan_token(LP)) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (jj_3R_parseFunction_628_24_22()) jj_scanpos = xsp;
    if (jj_scan_token(RP)) return true;
    return false;
  }

 inline bool jj_3R_parseSpatialDistanceArguments_1001_3_185()
 {
    if (jj_done) return true;
    if (jj_scan_token(LP)) return true;
    if (jj_3R_parseExpression_506_3_25()) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_parseExpression_506_3_25()) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_parseNumber_311_3_121()) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_parseDistanceUnits_432_3_196()) return true;
    if (jj_scan_token(RP)) return true;
    return false;
  }

 inline bool jj_3R_parseAttribute_617_3_30()
 {
    if (jj_done) return true;
    if (jj_3R_parseName_457_3_21()) return true;
    return false;
  }

 inline bool jj_3R_parseSpatialArguments_990_3_184()
 {
    if (jj_done) return true;
    if (jj_scan_token(LP)) return true;
    if (jj_3R_parseExpression_506_3_25()) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_parseExpression_506_3_25()) return true;
    if (jj_scan_token(RP)) return true;
    return false;
  }

 inline bool jj_3R_parseBinding_606_3_59()
 {
    if (jj_done) return true;
    if (jj_scan_token(COLON)) return true;
    if (jj_3R_parseName_457_3_21()) return true;
    return false;
  }

 inline bool jj_3R_parseParameter_596_5_76()
 {
    if (jj_done) return true;
    if (jj_3R_parseInteger_295_3_90()) return true;
    return false;
  }

 inline bool jj_3R_parseRelateArguments_979_3_183()
 {
    if (jj_done) return true;
    if (jj_scan_token(LP)) return true;
    if (jj_3R_parseExpression_506_3_25()) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_parseExpression_506_3_25()) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_parseDE9IM_426_3_195()) return true;
    if (jj_scan_token(RP)) return true;
    return false;
  }

 inline bool jj_3R_parseParameter_594_5_75()
 {
    if (jj_done) return true;
    if (jj_3R_parseIdentifier_419_3_54()) return true;
    return false;
  }

 inline bool jj_3R_parseParameter_592_3_60()
 {
    if (jj_done) return true;
    if (jj_scan_token(DOLLAR)) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parseParameter_594_5_75()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parseParameter_596_5_76()) return true;
    return false;
  }

 inline bool jj_3_1()
 {
    if (jj_done) return true;
    if (jj_3R_parseFunction_628_3_15()) return true;
    return false;
  }

 inline bool jj_3R_parseBBoxArguments_968_3_182()
 {
    if (jj_done) return true;
    if (jj_scan_token(LP)) return true;
    if (jj_3R_parseExpression_506_3_25()) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_parseNumber_311_3_121()) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_parseNumber_311_3_121()) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_parseNumber_311_3_121()) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_parseNumber_311_3_121()) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (jj_3R_parseBBoxArguments_968_125_194()) jj_scanpos = xsp;
    if (jj_scan_token(RP)) return true;
    return false;
  }

 inline bool jj_3R_parseNamedExpression_580_3_37()
 {
    if (jj_done) return true;
    if (jj_3R_parseAttribute_617_3_30()) return true;
    return false;
  }

 inline bool jj_3R_parseNamedExpression_579_3_36()
 {
    if (jj_done) return true;
    if (jj_3R_parseFunction_628_3_15()) return true;
    return false;
  }

 inline bool jj_3R_parseNamedExpression_578_3_35()
 {
    if (jj_done) return true;
    if (jj_3R_parseParameter_592_3_60()) return true;
    return false;
  }

 inline bool jj_3R_parseNamedExpression_577_3_23()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parseNamedExpression_577_3_34()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseNamedExpression_578_3_35()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseNamedExpression_579_3_36()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parseNamedExpression_580_3_37()) return true;
    return false;
  }

 inline bool jj_3R_parseNamedExpression_577_3_34()
 {
    if (jj_done) return true;
    if (jj_3R_parseBinding_606_3_59()) return true;
    return false;
  }

 inline bool jj_3R_parseSpatialPredicate_957_3_173()
 {
    if (jj_done) return true;
    if (jj_scan_token(DWITHIN)) return true;
    if (jj_3R_parseSpatialDistanceArguments_1001_3_185()) return true;
    return false;
  }

 inline bool jj_3R_parseSpatialPredicate_956_3_172()
 {
    if (jj_done) return true;
    if (jj_scan_token(BEYOND)) return true;
    if (jj_3R_parseSpatialDistanceArguments_1001_3_185()) return true;
    return false;
  }

 inline bool jj_3R_parseSpatialPredicate_954_3_171()
 {
    if (jj_done) return true;
    if (jj_scan_token(WITHIN)) return true;
    if (jj_3R_parseSpatialArguments_990_3_184()) return true;
    return false;
  }

 inline bool jj_3R_parseSpatialPredicate_953_3_170()
 {
    if (jj_done) return true;
    if (jj_scan_token(TOUCHES)) return true;
    if (jj_3R_parseSpatialArguments_990_3_184()) return true;
    return false;
  }

 inline bool jj_3R_parseSpatialPredicate_952_3_169()
 {
    if (jj_done) return true;
    if (jj_scan_token(OVERLAPS)) return true;
    if (jj_3R_parseSpatialArguments_990_3_184()) return true;
    return false;
  }

 inline bool jj_3R_parseSpatialPredicate_951_3_168()
 {
    if (jj_done) return true;
    if (jj_scan_token(INTERSECTS)) return true;
    if (jj_3R_parseSpatialArguments_990_3_184()) return true;
    return false;
  }

 inline bool jj_3R_parseSpatialPredicate_950_3_167()
 {
    if (jj_done) return true;
    if (jj_scan_token(EQUALS)) return true;
    if (jj_3R_parseSpatialArguments_990_3_184()) return true;
    return false;
  }

 inline bool jj_3R_parseSpatialPredicate_949_3_166()
 {
    if (jj_done) return true;
    if (jj_scan_token(DISJOINT)) return true;
    if (jj_3R_parseSpatialArguments_990_3_184()) return true;
    return false;
  }

 inline bool jj_3R_parseSpatialPredicate_948_3_165()
 {
    if (jj_done) return true;
    if (jj_scan_token(CROSSES)) return true;
    if (jj_3R_parseSpatialArguments_990_3_184()) return true;
    return false;
  }

 inline bool jj_3R_parseSpatialPredicate_947_3_164()
 {
    if (jj_done) return true;
    if (jj_scan_token(CONTAINS)) return true;
    if (jj_3R_parseSpatialArguments_990_3_184()) return true;
    return false;
  }

 inline bool jj_3R_parseLiteral_563_3_115()
 {
    if (jj_done) return true;
    if (jj_3R_parseEWKT_346_3_124()) return true;
    return false;
  }

 inline bool jj_3R_parseSpatialPredicate_945_3_163()
 {
    if (jj_done) return true;
    if (jj_scan_token(RELATE)) return true;
    if (jj_3R_parseRelateArguments_979_3_183()) return true;
    return false;
  }

 inline bool jj_3R_parseLiteral_562_3_114()
 {
    if (jj_done) return true;
    if (jj_3R_parseGeometry_332_3_123()) return true;
    return false;
  }

 inline bool jj_3R_parseSpatialPredicate_944_3_162()
 {
    if (jj_done) return true;
    if (jj_scan_token(BBOX)) return true;
    if (jj_3R_parseBBoxArguments_968_3_182()) return true;
    return false;
  }

 inline bool jj_3R_parseLiteral_561_3_113()
 {
    if (jj_done) return true;
    if (jj_3R_parseTemporal_321_3_122()) return true;
    return false;
  }

 inline bool jj_3R_parseSpatialPredicate_944_3_148()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parseSpatialPredicate_944_3_162()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseSpatialPredicate_945_3_163()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseSpatialPredicate_947_3_164()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseSpatialPredicate_948_3_165()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseSpatialPredicate_949_3_166()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseSpatialPredicate_950_3_167()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseSpatialPredicate_951_3_168()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseSpatialPredicate_952_3_169()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseSpatialPredicate_953_3_170()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseSpatialPredicate_954_3_171()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseSpatialPredicate_956_3_172()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parseSpatialPredicate_957_3_173()) return true;
    return false;
  }

 inline bool jj_3R_parseLiteral_560_3_112()
 {
    if (jj_done) return true;
    if (jj_3R_parseString_288_3_68()) return true;
    return false;
  }

 inline bool jj_3R_parseLiteral_559_3_111()
 {
    if (jj_done) return true;
    if (jj_3R_parseNumber_311_3_121()) return true;
    return false;
  }

 inline bool jj_3R_parseLiteral_558_3_92()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parseLiteral_558_3_110()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseLiteral_559_3_111()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseLiteral_560_3_112()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseLiteral_561_3_113()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseLiteral_562_3_114()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parseLiteral_563_3_115()) return true;
    return false;
  }

 inline bool jj_3R_parseLiteral_558_3_110()
 {
    if (jj_done) return true;
    if (jj_3R_parseUuid_274_3_120()) return true;
    return false;
  }

 inline bool jj_3R_parseUnaryExpression_543_3_80()
 {
    if (jj_done) return true;
    if (jj_scan_token(LP)) return true;
    if (jj_3R_parseFilter_652_3_57()) return true;
    if (jj_scan_token(RP)) return true;
    return false;
  }

 inline bool jj_3R_parseUnaryExpression_542_3_79()
 {
    if (jj_done) return true;
    if (jj_3R_parseNamedExpression_577_3_23()) return true;
    return false;
  }

 inline bool jj_3R_parseInPredicateList_901_27_104()
 {
    if (jj_done) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_parseInPredicateItem_912_3_103()) return true;
    return false;
  }

 inline bool jj_3R_parseUnaryExpression_541_3_78()
 {
    if (jj_done) return true;
    if (jj_3R_parseLiteral_558_3_92()) return true;
    return false;
  }

 inline bool jj_3R_parseUnaryExpression_540_3_77()
 {
    if (jj_done) return true;
    if (jj_3R_parseNull_260_3_91()) return true;
    return false;
  }

 inline bool jj_3R_parseUnaryExpression_540_3_61()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parseUnaryExpression_540_3_77()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseUnaryExpression_541_3_78()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseUnaryExpression_542_3_79()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parseUnaryExpression_543_3_80()) return true;
    return false;
  }

 inline bool jj_3R_parseInPredicateItem_914_3_118()
 {
    if (jj_done) return true;
    if (jj_3R_parseParameter_592_3_60()) return true;
    return false;
  }

 inline bool jj_3R_parseInPredicateItem_913_3_117()
 {
    if (jj_done) return true;
    if (jj_3R_parseBinding_606_3_59()) return true;
    return false;
  }

 inline bool jj_3R_parseInPredicateItem_912_3_103()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parseInPredicateItem_912_3_116()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseInPredicateItem_913_3_117()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parseInPredicateItem_914_3_118()) return true;
    return false;
  }

 inline bool jj_3R_parseInPredicateItem_912_3_116()
 {
    if (jj_done) return true;
    if (jj_3R_parseLiteral_558_3_92()) return true;
    return false;
  }

 inline bool jj_3R_parseMultiplicativeExpression_526_5_83()
 {
    if (jj_done) return true;
    if (jj_scan_token(MOD)) return true;
    if (jj_3R_parseUnaryExpression_540_3_61()) return true;
    return false;
  }

 inline bool jj_3R_parseMultiplicativeExpression_525_5_82()
 {
    if (jj_done) return true;
    if (jj_scan_token(DIV)) return true;
    if (jj_3R_parseUnaryExpression_540_3_61()) return true;
    return false;
  }

 inline bool jj_3R_parseMultiplicativeExpression_524_5_62()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parseMultiplicativeExpression_524_5_81()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseMultiplicativeExpression_525_5_82()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parseMultiplicativeExpression_526_5_83()) return true;
    return false;
  }

 inline bool jj_3R_parseMultiplicativeExpression_524_5_81()
 {
    if (jj_done) return true;
    if (jj_scan_token(MUL)) return true;
    if (jj_3R_parseUnaryExpression_540_3_61()) return true;
    return false;
  }

 inline bool jj_3R_parseMultiplicativeExpression_522_3_40()
 {
    if (jj_done) return true;
    if (jj_3R_parseUnaryExpression_540_3_61()) return true;
    Token * xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_parseMultiplicativeExpression_524_5_62()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

 inline bool jj_3R_parseInPredicateList_901_3_87()
 {
    if (jj_done) return true;
    if (jj_3R_parseInPredicateItem_912_3_103()) return true;
    Token * xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_parseInPredicateList_901_27_104()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

 inline bool jj_3R_parseExpression_509_5_64()
 {
    if (jj_done) return true;
    if (jj_scan_token(SUB)) return true;
    if (jj_3R_parseMultiplicativeExpression_522_3_40()) return true;
    return false;
  }

 inline bool jj_3R_parseName_460_53_72()
 {
    if (jj_done) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_3R_parseName_457_3_21()) return true;
    return false;
  }

 inline bool jj_3R_parseExpression_508_5_63()
 {
    if (jj_done) return true;
    if (jj_scan_token(ADD)) return true;
    if (jj_3R_parseMultiplicativeExpression_522_3_40()) return true;
    return false;
  }

 inline bool jj_3R_parseExpression_508_5_41()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parseExpression_508_5_63()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parseExpression_509_5_64()) return true;
    return false;
  }

 inline bool jj_3R_parseExpressionList_494_18_58()
 {
    if (jj_done) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_parseFilter_652_3_57()) return true;
    return false;
  }

 inline bool jj_3R_parseInOperator_890_3_102()
 {
    if (jj_done) return true;
    if (jj_scan_token(NOT)) return true;
    if (jj_scan_token(IN)) return true;
    return false;
  }

 inline bool jj_3R_parseExpression_506_3_25()
 {
    if (jj_done) return true;
    if (jj_3R_parseMultiplicativeExpression_522_3_40()) return true;
    Token * xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_parseExpression_508_5_41()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

 inline bool jj_3R_parseInOperator_889_3_86()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parseInOperator_889_3_101()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parseInOperator_890_3_102()) return true;
    return false;
  }

 inline bool jj_3R_parseInOperator_889_3_101()
 {
    if (jj_done) return true;
    if (jj_scan_token(IN)) return true;
    return false;
  }

 inline bool jj_3R_parseExpressionList_494_3_33()
 {
    if (jj_done) return true;
    if (jj_3R_parseFilter_652_3_57()) return true;
    Token * xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_parseExpressionList_494_18_58()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

 inline bool jj_3R_parseInPredicate_877_3_67()
 {
    if (jj_done) return true;
    if (jj_3R_parseInOperator_889_3_86()) return true;
    if (jj_scan_token(LP)) return true;
    if (jj_3R_parseInPredicateList_901_3_87()) return true;
    if (jj_scan_token(RP)) return true;
    return false;
  }

 inline bool jj_3R_parseBetweenOperator_866_3_53()
 {
    if (jj_done) return true;
    if (jj_scan_token(NOT)) return true;
    if (jj_scan_token(BETWEEN)) return true;
    return false;
  }

 inline bool jj_3R_parseBetweenOperator_865_3_52()
 {
    if (jj_done) return true;
    if (jj_scan_token(BETWEEN)) return true;
    return false;
  }

 inline bool jj_3R_parseBetweenOperator_865_3_29()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parseBetweenOperator_865_3_52()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parseBetweenOperator_866_3_53()) return true;
    return false;
  }

 inline bool jj_3R_parseLocalName_471_3_31()
 {
    if (jj_done) return true;
    if (jj_3R_parseIdentifier_419_3_54()) return true;
    return false;
  }

 inline bool jj_3R_parseBetweenPredicate_853_3_19()
 {
    if (jj_done) return true;
    if (jj_3R_parseBetweenOperator_865_3_29()) return true;
    if (jj_3R_parseExpression_506_3_25()) return true;
    if (jj_scan_token(AND)) return true;
    if (jj_3R_parseExpression_506_3_25()) return true;
    return false;
  }

 inline bool jj_3R_parseName_459_9_55()
 {
    if (jj_done) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_3R_parseName_457_3_21()) return true;
    return false;
  }

 inline bool jj_3R_parseName_459_9_32()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parseName_459_9_55()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parseName_460_5_56()) return true;
    return false;
  }

 inline bool jj_3R_parseName_460_5_56()
 {
    if (jj_done) return true;
    if (jj_scan_token(LSP)) return true;
    if (jj_3R_parseIdentifier_419_3_54()) return true;
    if (jj_scan_token(RSP)) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (jj_3R_parseName_460_53_72()) jj_scanpos = xsp;
    return false;
  }

 inline bool jj_3R_parseLikePattern_842_3_51()
 {
    if (jj_done) return true;
    if (jj_3R_parseRegExp_281_3_69()) return true;
    return false;
  }

 inline bool jj_3R_parseLikePattern_841_3_50()
 {
    if (jj_done) return true;
    if (jj_3R_parseString_288_3_68()) return true;
    return false;
  }

 inline bool jj_3R_parseLikePattern_841_3_28()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parseLikePattern_841_3_50()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parseLikePattern_842_3_51()) return true;
    return false;
  }

 inline bool jj_3R_parseName_457_3_21()
 {
    if (jj_done) return true;
    if (jj_3R_parseLocalName_471_3_31()) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (jj_3R_parseName_459_9_32()) jj_scanpos = xsp;
    return false;
  }

 inline bool jj_3R_parseLikeOperator_829_3_49()
 {
    if (jj_done) return true;
    if (jj_scan_token(NOT)) return true;
    if (jj_scan_token(ILIKE)) return true;
    return false;
  }

 inline bool jj_3R_parseLikeOperator_828_3_48()
 {
    if (jj_done) return true;
    if (jj_scan_token(LIKE)) return true;
    return false;
  }

 inline bool jj_3_6()
 {
    if (jj_done) return true;
    if (jj_scan_token(NOT)) return true;
    if (jj_scan_token(LIKE)) return true;
    return false;
  }

 inline bool jj_3R_parseLikeOperator_826_3_47()
 {
    if (jj_done) return true;
    if (jj_scan_token(ILIKE)) return true;
    return false;
  }

 inline bool jj_3R_parseLikeOperator_826_3_27()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parseLikeOperator_826_3_47()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseLikeOperator_828_3_48()) return false;
    jj_scanpos = xsp;
    if (!jj_3_6()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parseLikeOperator_829_3_49()) return true;
    return false;
  }

 inline bool jj_3R_parseDistanceUnits_432_3_196()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_scan_token(FEET)) return false;
    jj_scanpos = xsp;
    if (!jj_scan_token(METERS)) return false;
    jj_scanpos = xsp;
    if (!jj_scan_token(KILOMETERS)) return false;
    jj_scanpos = xsp;
    if (!jj_scan_token(STATUTE_MILES)) return false;
    jj_scanpos = xsp;
    if (jj_scan_token(NAUTICAL_MILES)) return true;
    return false;
  }

 inline bool jj_3R_parseGeometryCollection_407_28_193()
 {
    if (jj_done) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_parseGeometry_332_3_123()) return true;
    return false;
  }

 inline bool jj_3R_parseLikePredicate_812_3_18()
 {
    if (jj_done) return true;
    if (jj_3R_parseLikeOperator_826_3_27()) return true;
    if (jj_3R_parseLikePattern_841_3_28()) return true;
    return false;
  }

 inline bool jj_3R_parseDE9IM_426_3_195()
 {
    if (jj_done) return true;
    if (jj_scan_token(DE9IM)) return true;
    return false;
  }

 inline bool jj_3R_parseMultiPolygon_401_27_191()
 {
    if (jj_done) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_parsePolygon_383_3_155()) return true;
    return false;
  }

 inline bool jj_3R_parseMultiLineString_395_30_192()
 {
    if (jj_done) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_parseLineString_377_3_156()) return true;
    return false;
  }

 inline bool jj_3R_parseMultiPoint_389_35_190()
 {
    if (jj_done) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_parsePointCoordinate_371_3_189()) return true;
    return false;
  }

 inline bool jj_3R_parseIdentifier_421_3_71()
 {
    if (jj_done) return true;
    if (jj_scan_token(IDENTIFIER_QUOTED_TOKEN)) return true;
    return false;
  }

 inline bool jj_3R_parseIdentifier_419_3_70()
 {
    if (jj_done) return true;
    if (jj_scan_token(IDENTIFIER_TOKEN)) return true;
    return false;
  }

 inline bool jj_3R_parseIdentifier_419_3_54()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parseIdentifier_419_3_70()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parseIdentifier_421_3_71()) return true;
    return false;
  }

 inline bool jj_3R_parseIsNullOperator_801_3_94()
 {
    if (jj_done) return true;
    if (jj_scan_token(NOT)) return true;
    if (jj_scan_token(NULL_TOKEN)) return true;
    return false;
  }

 inline bool jj_3R_parseIsNullOperator_800_3_84()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parseIsNullOperator_800_3_93()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parseIsNullOperator_801_3_94()) return true;
    return false;
  }

 inline bool jj_3R_parseIsNullOperator_800_3_93()
 {
    if (jj_done) return true;
    if (jj_scan_token(NULL_TOKEN)) return true;
    return false;
  }

 inline bool jj_3R_parsePolygon_383_35_188()
 {
    if (jj_done) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_parseCoordinateArray_359_3_187()) return true;
    return false;
  }

 inline bool jj_3R_parseEnvelope_413_4_181()
 {
    if (jj_done) return true;
    if (jj_scan_token(LP)) return true;
    if (jj_3R_parseNumber_311_3_121()) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_parseNumber_311_3_121()) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_parseNumber_311_3_121()) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_parseNumber_311_3_121()) return true;
    if (jj_scan_token(RP)) return true;
    return false;
  }

 inline bool jj_3R_parseEnvelope_413_3_161()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (jj_3R_parseEnvelope_413_4_181()) jj_scanpos = xsp;
    return false;
  }

 inline bool jj_3R_parseGeometryCollection_407_4_180()
 {
    if (jj_done) return true;
    if (jj_scan_token(LP)) return true;
    if (jj_3R_parseGeometry_332_3_123()) return true;
    Token * xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_parseGeometryCollection_407_28_193()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(RP)) return true;
    return false;
  }

 inline bool jj_3R_parseGeometryCollection_407_3_160()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (jj_3R_parseGeometryCollection_407_4_180()) jj_scanpos = xsp;
    return false;
  }

 inline bool jj_3R_parseIsNullPredicate_788_3_65()
 {
    if (jj_done) return true;
    if (jj_scan_token(IS)) return true;
    if (jj_3R_parseIsNullOperator_800_3_84()) return true;
    return false;
  }

 inline bool jj_3R_parseMultiPolygon_401_4_178()
 {
    if (jj_done) return true;
    if (jj_scan_token(LP)) return true;
    if (jj_3R_parsePolygon_383_3_155()) return true;
    Token * xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_parseMultiPolygon_401_27_191()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(RP)) return true;
    return false;
  }

 inline bool jj_3R_parseMultiPolygon_401_3_158()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (jj_3R_parseMultiPolygon_401_4_178()) jj_scanpos = xsp;
    return false;
  }

 inline bool jj_3R_parsePointCoordinate_371_30_200()
 {
    if (jj_done) return true;
    if (jj_3R_parsePoint_365_3_154()) return true;
    return false;
  }

 inline bool jj_3R_parseMultiLineString_395_4_179()
 {
    if (jj_done) return true;
    if (jj_scan_token(LP)) return true;
    if (jj_3R_parseLineString_377_3_156()) return true;
    Token * xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_parseMultiLineString_395_30_192()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(RP)) return true;
    return false;
  }

 inline bool jj_3R_parseMultiLineString_395_3_159()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (jj_3R_parseMultiLineString_395_4_179()) jj_scanpos = xsp;
    return false;
  }

 inline bool jj_3R_parseComparisionOperator_778_3_100()
 {
    if (jj_done) return true;
    if (jj_scan_token(GTE)) return true;
    return false;
  }

 inline bool jj_3R_parseComparisionOperator_777_3_99()
 {
    if (jj_done) return true;
    if (jj_scan_token(GT)) return true;
    return false;
  }

 inline bool jj_3R_parseComparisionOperator_776_3_98()
 {
    if (jj_done) return true;
    if (jj_scan_token(LTE)) return true;
    return false;
  }

 inline bool jj_3R_parseComparisionOperator_775_3_97()
 {
    if (jj_done) return true;
    if (jj_scan_token(LT)) return true;
    return false;
  }

 inline bool jj_3R_parseComparisionOperator_774_3_96()
 {
    if (jj_done) return true;
    if (jj_scan_token(NEQ)) return true;
    return false;
  }

 inline bool jj_3R_parseMultiPoint_389_4_177()
 {
    if (jj_done) return true;
    if (jj_scan_token(LP)) return true;
    if (jj_3R_parsePointCoordinate_371_3_189()) return true;
    Token * xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_parseMultiPoint_389_35_190()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(RP)) return true;
    return false;
  }

 inline bool jj_3R_parseMultiPoint_389_3_157()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (jj_3R_parseMultiPoint_389_4_177()) jj_scanpos = xsp;
    return false;
  }

 inline bool jj_3R_parseComparisionOperator_772_3_85()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (!jj_3R_parseComparisionOperator_772_3_95()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseComparisionOperator_774_3_96()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseComparisionOperator_775_3_97()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseComparisionOperator_776_3_98()) return false;
    jj_scanpos = xsp;
    if (!jj_3R_parseComparisionOperator_777_3_99()) return false;
    jj_scanpos = xsp;
    if (jj_3R_parseComparisionOperator_778_3_100()) return true;
    return false;
  }

 inline bool jj_3R_parseComparisionOperator_772_3_95()
 {
    if (jj_done) return true;
    if (jj_scan_token(EQ)) return true;
    return false;
  }

 inline bool jj_3R_parseCoordinateArray_359_30_198()
 {
    if (jj_done) return true;
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_parseCoordinate_353_3_186()) return true;
    return false;
  }

 inline bool jj_3R_parsePolygon_383_4_175()
 {
    if (jj_done) return true;
    if (jj_scan_token(LP)) return true;
    if (jj_3R_parseCoordinateArray_359_3_187()) return true;
    Token * xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_parsePolygon_383_35_188()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(RP)) return true;
    return false;
  }

 inline bool jj_3R_parsePolygon_383_3_155()
 {
    if (jj_done) return true;
    Token * xsp;
    xsp = jj_scanpos;
    if (jj_3R_parsePolygon_383_4_175()) jj_scanpos = xsp;
    return false;
  }


public: 
  void setErrorHandler(ErrorHandler *eh) {
    if (delete_eh) delete errorHandler;
    errorHandler = eh;
    delete_eh = false;
  }

  TokenManager *token_source = nullptr;
  CharStream   *jj_input_stream = nullptr;
  /** Current token. */
  Token        *token = nullptr;
  /** Next token. */
  Token        *jj_nt = nullptr;

private: 
  int           jj_ntk;
  JJCalls       jj_2_rtns[8];
  bool          jj_rescan;
  int           jj_gc;
  Token        *jj_scanpos, *jj_lastpos;
  int           jj_la;
  /** Whether we are looking ahead. */
  bool          jj_lookingAhead;
  bool          jj_semLA;
  int           jj_gen;
  int           jj_la1[61];
  ErrorHandler *errorHandler = nullptr;

protected: 
  bool          delete_eh     = false;
  bool          delete_tokens = true;
  bool          hasError;

  Token        *head;

public: 
  Expression(TokenManager *tokenManager);
  virtual ~Expression();
void ReInit(TokenManager* tokenManager);
void clear();
Token * jj_consume_token(int kind);
bool  jj_scan_token(int kind);
Token * getNextToken();
Token * getToken(int index);
private:
  int jj_kind;
  int **jj_expentries;
  int *jj_expentry;
  void jj_add_error_token(int kind, int pos);
protected:
  /** Generate ParseException. */
  virtual void  parseError();
private:
  int  indent; // trace indentation
  bool trace = false; // trace enabled if true

public:
  bool trace_enabled();
  void enable_tracing();
  void disable_tracing();
  void jj_rescan_token();
  void jj_save(int index, int xla);

//C++
protected:
  virtual void jjtreeOpenNodeScope(SimpleNode * node) {};
  virtual void jjtreeCloseNodeScope(SimpleNode * node) {};

  JJTExpressionState jjtree;
private:
  bool jj_done;
};
/* JavaCC - OriginalChecksum=8a17cef9d65b7b5543d056efbbdbfe33 (do not edit this line) */
