/* Generated By:JavaCC: Do not edit this line. SpecialToken.h Version 8.0.0 */
#ifndef JAVACC_SPECIALTOKEN_H
#define JAVACC_SPECIALTOKEN_H

#include "JavaCC.h"
#include "CharStream.h"
#include "Token.h"
#include "TokenManager.h"
#include "DefaultToken.h"
#include "SpecialTokenConstants.h"
#include "ErrorHandler.h"
  struct JJCalls {
    int        gen;
    int        arg;
    JJCalls*   next;
    Token*     first;
    ~JJCalls() { if (next) delete next; }
     JJCalls() { next = nullptr; arg = 0; gen = -1; first = nullptr; }
  };

class SpecialToken{
public:
void Input();

public: 
  void setErrorHandler(ErrorHandler *eh) {
    if (delete_eh) delete errorHandler;
    errorHandler = eh;
    delete_eh = false;
  }

  TokenManager* token_source = nullptr;
  CharStream*   jj_input_stream = nullptr;
  Token*        token = nullptr;  // Current token.
  Token*        jj_nt = nullptr;  // Next token.

private: 
  int           jj_ntk;
  JJCalls       jj_2_rtns[1];
  bool          jj_rescan;
  int           jj_gc;
  Token*        jj_scanpos;
  Token*        jj_lastpos;
  int           jj_la;
  bool          jj_lookingAhead;  // Whether we are looking ahead.
  bool          jj_semLA;
  int           jj_gen;
  int           jj_la1[2];
  ErrorHandler* errorHandler = nullptr;

protected: 
  bool          delete_eh     = false;
  bool          delete_tokens = true;
  bool          hasError;

  Token*        head;

public: 
  SpecialToken(TokenManager* tokenManager);
  virtual ~SpecialToken();
void ReInit(TokenManager* tokenManager);
void clear();
Token*  jj_consume_token(int kind);
Token*  getNextToken();
Token*  getToken(int index);
int jj_ntk_f();
private:
  int jj_kind;
  int** jj_expentries;
  int*  jj_expentry;

protected:
  /** Generate ParseException. */
  virtual void  parseError();
private:
  int  indent; // trace indentation
  bool trace = true; // trace enabled if true

public:
  bool trace_enabled();
  void enable_tracing();
  void disable_tracing();
  void trace_call(const char *s);
  void trace_return(const char *s);
  void trace_token(const Token* token, const char* where);
  void trace_scan(const Token* token, int t2);


private:
  bool jj_done;
};
#endif
/* JavaCC - OriginalChecksum=3b0e992246d670190a9a57a6d74b8823 (do not edit this line) */
